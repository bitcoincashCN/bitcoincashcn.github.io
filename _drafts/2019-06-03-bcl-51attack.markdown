---
layout: post
title:  "BCH原链的51%算力攻击实验"
date:   2019-06-03
categories: 教程和实验
tags: BCH Clashic BCH原链 操作教程 51%攻击 区块重写 
---

* content
{:toc}

# 前言

我们大概听说过很多关于黑客进行区块链51％攻击的报道，比如ETC、BTG在2018年前后，都遭受过51%攻击，其中BTG据说被干掉了38万枚交易记录。但是，我们很少能看到攻击的详细操作细节披露，本实验以BCH原链为基础，在真实的全球网络环境下，完全实战了一次51%攻击，本文将会讲解这次实验完整的操作步骤和细节，并且就攻击的博弈和经济学意义做一些分析。

# 一、实验环境准备

## 1、物理环境

* 最少需要2个节点主机，本实验采用2个虚拟机系统，Vmware装Ubuntu 18.04 LTS Server（64bit），各500GB硬盘

* 可以设置访问控制列表的网关，Ubuntu本身可以设置防火墙，但是我的网络接入设备是Cisco交换机，访问列表是在这上面做的，用于分隔攻击链和诚实链

* 矿机若干，详细需求见算力测算部分

## 2、软件环境

* 2个节点主机均同步到最新的区块高度

* 2个节点主机放在一个独立的VLAN内，网关设置访问列表，只允许与特定主机IP通讯，比如矿机IP、SSH登陆主机IP，其它的访问一律禁止，只样是为了将2个节点主机隔离开。允许通讯的特定主机，均不能运行节点（否则导致隔离失败）。

* 在2个节点主机中的一台安装CKPOOL矿池服务，用于出块（攻击链），不安装矿池采用Solo挖矿也可以。

## 3、所需算力测算

* 算力测算主要用chainwork计算进行，具体计算办法，[最新区块的chainwork删掉最后8位]-[攻击回滚目标的chainwork删掉最后8位]，得出一个数值（先把16进制转10进制），该数值即累计难度差。

* 本实验的攻击前的区块高度是814652，攻击的目标是“删除”762048之后的全部区块，这两个区块之间的累积难度差很低，只有400多万。

* 有一个简便的算法，难度10000对应的算力大概是75G/10分钟，400万难度差需要调用的算力是75G*400=30T，也就是有30T算力，只需要10分钟时间，就可以追上这个难度差。这个算法是简便的，实际中还需要考虑上诚实链的也在出块增加难度差。

* [比特币最长链条判定机制说明](https://bitcoincashcn.github.io/2019/05/29/bcl-51percentattack/)

# 二、51%攻击的启动

## 1、隔离私链（攻击链）

在网关路由器上，关闭2个节点的对外通讯，这里用的Cisco路由器配置，也可以用其它的方式实现网络控制：

```
!
interface Vlan11
 ip address 10.1.102.1 255.255.255.0
 ip access-group vlan11-in in
!

Extended IP access list vlan11-in
    30 permit ip any host 10.1.101.110
    40 permit ip any host 10.1.101.11
    50 deny ip any any
```

控制这两个节点只能与矿机或指定IP通讯，限制其访问任何外网节点。矿机由多台，则依次添加允许IP。

## 2、私链的区块回滚

比特币的节点自带隐藏的区块操作命令，invalidateblock，用这条命令指定具体的区块为无效，比如指定区块100为无效，那么100之后的全部区块就会全部无效。我们的目标是期望762048区块及之后区块均重新挖矿，因此查询该区块的hash值为：

000000002b7ad68e8528c20ec8bc8366cdd9a8c2db2b4050e0c9f2c9e39603b0

在两台节点均输入以下命令：

```
./bitcoin-cli invalidateblock 000000002b7ad68e8528c20ec8bc8366cdd9a8c2db2b4050e0c9f2c9e39603b0
```

这条命令没有输出，等其运行完毕，运行getinfo查看，确认区块已经回滚：

```
./bitcoin-cli getinfo
{
  "version": 150100,
  "protocolversion": 70015,
  "walletversion": 130000,
  "balance": 0.00000000,
  "blocks": 762047,
  "timeoffset": 0,
  "connections": 0,
  "proxy": "",
  "difficulty": 1,
  "testnet": false,
  "keypoololdest": 1559171551,
  "keypoolsize": 100,
  "paytxfee": 0.00000000,
  "relayfee": 0.00001000,
  "errors": ""
}
```

两台主机节点均回滚到了762047区块高度。回滚不要重启进程，否则有可能又需要重新指定无效区块。

这个时候，你会发现它们的connections数为零，因为外网已经隔离。但是连接数位零，是无法挖矿的，用getblocktemplate命令会提示“bitcoin is not connected!”，这是一个节点的常规限制，这也就是为什么我们要设置私链的节点数为2个。用addnode "10.1.102.33:8333" add命令让两个节点建立连接。

## 3、启动挖矿

开启矿机，将矿机设置指向私链节点中的一个（前提是装好了ckpool矿池，用其它挖矿代理也是一样的），总而言之，矿机算力显示正常即可。

## 4、出块检查

使用getinfo检查出块情况，一旦发现区块高度正常增加，且该高度在外网浏览器查询不存在，则证明新的链条已经生成。


# 三、51%攻击目标的达成

## 1、chainwork的检查

在私链节点上面检查chainwork累积情况：

```
 ./bitcoin-cli getblockchaininfo
{
  "chain": "main",
  "blocks": 775350,
  "headers": 775350,
  "bestblockhash": "00000000000908a11cbbcfa13f819a82511476d4d02da0315d91e70b0d906188",
  "difficulty": 4096,
  "mediantime": 1559563362,
  "verificationprogress": 0.9999995967199629,
  "chainwork": "0000000000000000000000000000000000000000007cb5f9cb5791e6eb380892",
  "pruned": false,
  "softforks": [
    {
      "id": "bip34",
      "version": 2,
      "reject": {
        "status": true
      }
    }, 
    {
      "id": "bip66",
      "version": 3,
      "reject": {
        "status": true
      }
    }, 
    {
      "id": "bip65",
      "version": 4,
      "reject": {
        "status": true
      }
    }
  ],
  "bip9_softforks": {
    "csv": {
      "status": "active",
      "startTime": 1462060800,
      "timeout": 1493596800,
      "since": 419328
    }
  }
```

chainwork数值超过诚实链就代表攻击目标达成，为了稳妥起见，可以等该数值拉开一定距离再进行全网广播。

## 2、全网广播

删除掉网关隔离对外通讯的访问列表限制，两个私链节点就会自动向全网进行广播，因为它们是最长链条，所以会成为新的诚实链。为了加速广播速度，可以手动使用addnode指令，对没有被同步的节点进行握手，如此一来，一传十，十传百，只要短期内没有更强的算力扭转，所有的算力都会自动加入到私链，而私链就自然而然成为了公链。

在节点上面查看原来的区块信息，仍然能够看到原来高度762048及之后的老区块，但是已经成为了孤儿块,确认数为-1：

```
getblock 000000002b7ad68e8528c20ec8bc8366cdd9a8c2db2b4050e0c9f2c9e39603b0

{
  "hash": "000000002b7ad68e8528c20ec8bc8366cdd9a8c2db2b4050e0c9f2c9e39603b0",
  "confirmations": -1,
  "size": 201,
  "height": 762048,
  "version": 536870912,
  "versionHex": "20000000",
  "merkleroot": "9d456740607533c1982b622fdfbca150c4f457de57d539c40b585d63359e3304",
  "tx": [
    "9d456740607533c1982b622fdfbca150c4f457de57d539c40b585d63359e3304"
  ],
  "time": 1545892389,
  "mediantime": 1545892385,
  "nonce": 3763299100,
  "bits": "1d00ffff",
  "difficulty": 1,
  "chainwork": "0000000000000000000000000000000000000000007cb5f9cae224127d639b33",
  "previousblockhash": "00000000b6cde760c076bc5c5731f70ab17c68ce2676b01a810696992269b169"
}
```

## 3、确认全网同步区块数据

因为BCH原链节点数不多，节点的同步时间从数分钟到数小时不等


# 四、关于博弈和经济学意义








